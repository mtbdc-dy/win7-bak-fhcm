<?xml version='1.0' encoding='utf-8'?>
<agent name='agtExcelImport' alias='科目信息导入' xmlns='http://www.lotus.com/dxl'
 version='9.0' replicaid='4825807E001E75D5' hide='v3' noreplace='true' publicaccess='false'
 designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='25f62' unid='0883B40EC8F487C048258334001E98D2' sequence='9'>
<created><datetime>20181028T133412,02+08</datetime></created>
<modified><datetime>20181028T140536,03+08</datetime></modified>
<revised><datetime>20181028T140536,02+08</datetime></revised>
<lastaccessed><datetime>20181028T140536,02+08</datetime></lastaccessed>
<addedtofile><datetime>20181028T133413,58+08</datetime></addedtofile></noteinfo>
<updatedby><name>CN=oanewadmin/O=ppm</name></updatedby>
<wassignedby><name>CN=oanewadmin/O=ppm</name></wassignedby>
<designchange><datetime>20181028T140422,21+08</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='action'><javaproject class='JavaAgent.class'
 codepath='D:\Program Files (x86)\IBM\Notes\Data'><java name='JavaAgent.java'>import lotus.domino.*;

import java.io.InputStream;
import java.util.Vector;

public class JavaAgent extends AgentBase {

	public void NotesMain() {
		Session session = null;
		EmbeddedObject emObject=null;
		//以下三行为导入时的配置部分
		String form = "frmKmxx_xm"; //excel导入文档使用的表单
		String [] fldCfg="fldKmdm_xm;fldKmsm_xm;fldZkmdm_xm;fldZkmsm_xm".split(";"); //保存至文档中的域名列表，其中的域名顺序与excel的列一致 
		int startRow=3;  //excel导入时的开始行号 (第一行为0)
		try {
			session = getSession();
			AgentContext agentContext = session.getAgentContext();
			//Database db = session.getDatabase("", "indishare/indinames.nsf");
		    //View view = db.getView("vwUserByUserID");
			Document docContext = agentContext.getDocumentContext();
			emObject = DoUtil.getAttachFile(docContext);
			String Username = null;
			docContext.replaceItemValue("Status", "失败");
			if(emObject!=null){
				InputStream isInputStream = emObject.getInputStream();
				Object [][] excelArrayObjects=POIUtil.getExcelDataToArray(isInputStream,startRow); 
				StringBuffer tempfordriver = new StringBuffer();
				//StringBuffer tempfordriver1 = new StringBuffer();
				for(int i=0;i&lt;excelArrayObjects.length;i++){
					//Username = "";
					//Document doc = view.getDocumentByKey(excelArrayObjects[i][0].toString().toLowerCase());
					//System.out.println(excelArrayObjects[i][0].toString().toLowerCase());
					//System.out.println(doc != null);
					//if(doc != null){
						//Name namme = session.createName(doc.getItemValueString("FullName"));
						//Username = namme.getCanonical();
						//System.out.println(Username);
						//判断key驾驶证编号是否已存在
						//String driverid = "@If(@IsError(@DbColumn( '' ; '' : '' ; 'vwCardInfoDocByName_xm' ; 1 ));'';@DbColumn( '' ; '' : '' ; 'vwCardInfoDocByName_xm' ; 1 ))";
						//Vector idtemp =  session.evaluate(driverid,docContext);
						//if (idtemp.contains(excelArrayObjects[i][0].toString())){
							//System.out.println("if");
						//	tempfordriver.append("Excel中第"+(i+4)+"行中的证件信息已存在\\n\\r");
						//}else{
							//System.out.println("else");
							Document document = session.getCurrentDatabase().createDocument();
							document.replaceItemValue("form", form);
							document.computeWithForm(false, false);
							Item it=document.replaceItemValue("Author", "*");
							it.setAuthors(true);
							//将excel列写入对应域
							processDoc(session,i,document,fldCfg,excelArrayObjects[i]); 
							
							document.save();
							if(document!=null)DoUtil.recycle(document);
						//}
							/*
					}else{
						tempfordriver1.append("Excel中第"+(i+3)+"行中的找不到对应的人员\\n\\r");
					}
					*/
					
				}
				if(tempfordriver.length()&gt;0){
					java.io.PrintWriter pw = getAgentOutput();
					pw.println("&lt;Script&gt;");
					pw.println("alert('"+tempfordriver.toString()+"')");
					pw.println("alert('导入失败')");
					pw.println("history.back();parent.location.reload();var objDialog = window.parent.dijit.byId('ifrmDigForExcel');objDialog.destroy();");
					pw.println("&lt;/Script&gt;");
					pw.flush();
					pw.close();
				}

				isInputStream.close(); //关闭，确保临时文件被删除
				docContext.replaceItemValue("Status", "成功");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(emObject!=null)DoUtil.recycle(emObject);
			if(session!=null)DoUtil.recycle(session);
		}
	}
	public void processDoc (Session session,int idx,Document doc,String [] flds,Object[] valus) throws Exception{
		//默认将excel列中的数据写入文档中
		doc.replaceItemValue("idx", new Integer(idx));
		java.io.PrintWriter pw = getAgentOutput();
		DoUtil.adjustExcelItemNull(flds, valus, pw);
		for(int i=0;i&lt;flds.length;i++){
				if((valus[i] == null || valus[i].toString().length() &lt;= 0)){
					//pw.println("&lt;Script&gt;");
				    //pw.println("alert('Excel中不允许存在空值，导入错误')");
					//pw.println("history.back();parent.location.reload();var objDialog = window.parent.dijit.byId('ifrmDigForExcel');objDialog.destroy();");
					//pw.println("&lt;/Script&gt;");
					//pw.flush();
					//pw.close();
					doc.replaceItemValue(flds[i], "");
				}else{
						doc.replaceItemValue(flds[i], valus[i]);
				}
		}
		//doc.replaceItemValue("fldXm_xm", Username);
	}


	
}</java>
<sharedlibraryref name='DoUtil'/>
<sharedlibraryref name='libPOI'/></javaproject></code>
<rundata processeddocs='0' exitcode='0' agentdata='EDCB3FF5BCAAE81448258334002184B1'>
<agentmodified><datetime>20181028T140536,03+08</datetime></agentmodified>
<agentrun><datetime>20181028T141441,44+08</datetime></agentrun>
<runlog>Started running agent 'agtExcelImport|科目信息导入' on 2018-10-28 14:14:38
Ran Java Agent Class
Done running agent 'agtExcelImport|科目信息导入' on 2018-10-28 14:14:41
</runlog></rundata>
<item name='$POID'><datetime>20130617T154258,36+08</datetime></item>
<item name='$JavaCompilerSource'><text>1.3</text></item>
<item name='$JavaCompilerTarget'><text>1.2</text></item></agent>

